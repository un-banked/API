{
    "openapi": "3.0.2",
    "info": {
        "title": "Unbanked - API de Integração",
        "version": "1.0.0",
        "description": "As APIs de integração da Unbanked permitem que os integradores utilizem toda gama de produtos financeiros disponibilizados pela Unbanked. Através de nossas APIs será possível acessar soluções de câmbio, crédito, meios de pagamento, investimentos e consórcio.\n\nNossas APIs:\n- [Meios de Pagamento](https://docs.unbanked.com.br/#tag/API-de-Meios-de-Pagamento)\n- Câmbio\n- Crédito\n- Investimento\n- Consórcio\n \n---\n\nLinks:\n\n* [Documentação](https://docs.unbanked.com.br)\n\n* [SwaggerUI](https://docs.unbanked.com.br/swagger)\n\n* [OpenAPI JSON](https://docs.unbanked.com.br/api.json)",
        "contact": {
            "name": "Unbanked Pagamentos LTDA",
            "url": "https://unbanked.com.br",
            "email": "suporte@unbanked.com.br"
        },
        "x-logo": {
            "url": "https://docs.unbanked.com.br/api-docs-logo.png",
            "backgroundColor": "#333333",
            "altText": "Logo"
        }
    },
    "servers": [
        {
            "url": "https://us-central1-unbanked-beta.cloudfunctions.net/v1-index",
            "description": "Sandbox | Test Server"
        }
    ],
    "paths": {
        "/v1": {
            "get": {
                "tags": [
                    "Informações"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/api_data"
                                },
                                "examples": {
                                    "Sucesso": {
                                        "value": {
                                            "name": "unbanked-api",
                                            "env": "sandbox",
                                            "version": "1"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Retorna as informações da API com sucesso."
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "api_info",
                "summary": "Detalhes da API",
                "description": "Retorna informações básicas da API, como nome, ambiente e versão fazendo também uma checagem básica da saúde da API, com validação de status dos serviços e servidores.\r\n\r\nPara informações mais detalhadas recomendamos acessar nossas páginas de Status:\r\n\r\n[Simplificado](https://status.unbanked.com.br)\r\n\r\n[Detalhado](https://statuspage.freshping.io/8685-unbanked)"
            }
        },
        "/v1/auth/login": {
            "description": "",
            "post": {
                "requestBody": {
                    "description": "E-mail e senha do usuário na plataforma Unbanked.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/login_data"
                            },
                            "examples": {
                                "Autenticação": {
                                    "value": {
                                        "email": "test@mail.com",
                                        "password": "123456"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Autenticação"
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/token_data"
                                },
                                "examples": {
                                    "Sucesso": {
                                        "value": {
                                            "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjI1OTc0MmQyNjlhY2IzNWZiNjU3YzBjNGRkMmM3YjcyYWEzMTRiNTAiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiZG1jr2xjY2FtIiwicGljdHVyZSI6Imh0dHBzOi8vYXBpLmFkb3JhYmxlLmlvL2F2YXRhcnMvNTAwLzMyODM2ODI0ODgzLnBuZyIsInpvb3BJRCI6IjkzMThhMDkxZWY3ZTQ4NWRiZjdhNjRkOGRiNDg4NzhlIiwidHlwZSI6ImluZGl2aWR1YWwiLCJyZXNvdXJjZSI6ImJ1eWVyIiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL3VuYmFua2VkLWJldGEiLCJhdWQiOiJ1bmJhbmtlZC1iZXRhIiwiYXV0aF90aW1lIjoxNTgwMjE3OTkzLCJ1c2VyX2lkIjoiS3hkaW1SM2R5T05aVzZFODR3T1pOWGtTczBJMiIsInN1YiI6Ikt4ZGltUjNkeU9OWlc2RTg0d09aTlhrZHMwSTIiLCJpYXQiOjE1ODAyMTc5OTMsImV4cCI6MTU4MDIyMTU5MywiZW1haWwiOiJkYW5pbG8ubW9yZWlyYTk0QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJmaXJlYmFzZSI6eyJpZGVudGl0aWVzIjp7ImVtYWlsIjpbImRhbmlsby5tb3JlaXJhOTRAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.D9bGNI2WZePxcX0ZGAMLjW8DkNkGaade_599uU1TWF4utt4h5pbDBBegBnH6N2VCROz7oxK9tl7uq7XLUGEYohmpntDdJ4X2uQyCwRfKkAOus-MDFDZnAtAr_s7XW7sTUYtpT9Wc3XuW2at9Ac_zhqDRwkfMMcVEVoflavKETYxHy2PrZ0tc4iUf8SsENEsqQCL3Ioa2al1j3CaX3MLhIXaWGrh7naUYyDD__h6flaie9ngi1ICD47z8ySSNUg_2Uce9qyxnNs5jv62kl0CAN_Xag8RbxRYr0kKOdOpaJYw-LouAb_hESMFSmHejhrdlolIbCpdh_f7uSGQ91LbSRA",
                                            "expirationTime": "Tue, 28 Jan 2020 14:26:33 GMT",
                                            "authTime": "Tue, 28 Jan 2020 13:26:33 GMT",
                                            "issuedAtTime": "Tue, 28 Jan 2020 13:26:33 GMT"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Loga o usuário na API e retorna um token de autenticação."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request_auth"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "auth_login",
                "summary": "Logar na API",
                "description": "Autentica um parceiro por meio de email e senha. Retorna um `token` a ser usado em todos os requests restritos. O token expira em 1 (uma) hora. O token retornado deve ser utilizado nos endpoints que requerem autentificação, utilizando o header `x-unbanked-token`, desta forma: `x-unbanked-token: token`"
            }
        },
        "/v1/auth/reset-password": {
            "description": "",
            "post": {
                "requestBody": {
                    "description": "E-mail do usuário na plataforma Unbanked.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/reset_login_data"
                            },
                            "examples": {
                                "E-mail para Recuperação": {
                                    "value": {
                                        "email": "test@mail.com"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Autenticação"
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/message_data"
                                },
                                "examples": {
                                    "Sucesso": {
                                        "value": {
                                            "message": "Link to Reset Password Sent"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Envia um e-mail para o usuário redefinir a sua senha."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request_auth_reset"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "auth_reset_password",
                "summary": "Recuperar Senha",
                "description": "Envia uma requisição para recuperação da senha do usuário. O e-mail informado receberá, caso o usuário exista na base de dados, um e-mail com um link para troca de senha."
            }
        },
        "/v1/cards/tokens": {
            "post": {
                "requestBody": {
                    "description": "Dados do cartão a ser tokenizado.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/card_data"
                            },
                            "examples": {
                                "Dados do Cartão": {
                                    "value": {
                                        "holder_name": "Test Tester",
                                        "card_number": "4539003370725497",
                                        "security_code": "123",
                                        "expiration_month": "10",
                                        "expiration_year": "2025"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Cartões"
                ],
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/201_card_token_created"
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    }
                },
                "operationId": "create_card_token",
                "summary": "Tokenizar um novo cartão",
                "description": "Cria um novo token de cartão, que poderá ser vinculado a um comprador ou então utilizado diretamente (uma única vez)."
            }
        },
        "/v1/cards": {
            "get": {
                "tags": [
                    "Cartões"
                ],
                "parameters": [
                    {
                        "examples": {
                            "ID do Cartão": {
                                "value": "\"02ec41795637446d805b6795b3b3331e\""
                            }
                        },
                        "name": "card_id",
                        "description": "Identificador do cartão.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/card_status_data"
                                },
                                "examples": {
                                    "Cartão Tokenizado": {
                                        "value": {
                                            "id": "02ec41795637446d805b6795b3b3331e",
                                            "resource": "card",
                                            "card_brand": "Visa",
                                            "first4_digits": "4929",
                                            "expiration_month": "9",
                                            "expiration_year": "2020",
                                            "holder_name": "TESTER MCTEST",
                                            "is_active": true,
                                            "is_valid": true,
                                            "is_verified": false,
                                            "customer": "005846dadde34e28ba7b9fecfccc989a",
                                            "fingerprint": "5c63dfe5921ccbc6195e8355aa965c1e6c552f74b96669dafec9addc2bfe1ea9",
                                            "verification_checklist": {
                                                "postal_code_check": "unchecked",
                                                "security_code_check": "fail",
                                                "address_line1_check": "unchecked"
                                            },
                                            "metadata": {

                                            },
                                            "created_at": "2019-05-06T12:39:27+00:00",
                                            "updated_at": "2019-05-06T12:39:34+00:00"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Retorna os dados do cartão."
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404_not_found"
                    }
                },
                "operationId": "get_card",
                "summary": "Recuperar dados de um cartão tokenizado",
                "description": "Recupera os dados de um cartão previamente tokenizado."
            },
            "post": {
                "requestBody": {
                    "description": "Dados do token e do comprador.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/link_card_to_buyer_data"
                            },
                            "examples": {
                                "Dados": {
                                    "value": {
                                        "token": "3012a31a10153e28ba71524131252018",
                                        "buyer": "1187r3rgthe85628va1b9fecfccc109a"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Cartões"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/card_status_data"
                                },
                                "examples": {
                                    "Sucesso": {
                                        "value": {
                                            "id": "8f76c317f27b4cbd8247cc42d70618cd",
                                            "resource": "card",
                                            "card_brand": "Visa",
                                            "first4_digits": "4929",
                                            "expiration_month": "9",
                                            "expiration_year": "2020",
                                            "holder_name": "TEST MC TESTER",
                                            "is_active": false,
                                            "is_valid": true,
                                            "is_verified": false,
                                            "fingerprint": "5c63dfe5921ccbc6195e8355aa965c1e6c552f74b96669dafec9addc2bfe1ea9",
                                            "verification_checklist": {
                                                "postal_code_check": "unchecked",
                                                "security_code_check": "unchecked",
                                                "address_line1_check": "unchecked"
                                            },
                                            "metadata": {

                                            },
                                            "created_at": "2019-05-06T11:33:45+00:00",
                                            "updated_at": "2019-05-06T11:33:45+00:00"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Retorna os dados do cartão vinculado com sucesso."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404_not_found"
                    }
                },
                "operationId": "link_card_to_buyer",
                "summary": "Associar cartão à comprador",
                "description": "Associa um cartão previamente tokenizado a carteira de um comprador."
            },
            "delete": {
                "tags": [
                    "Cartões"
                ],
                "parameters": [
                    {
                        "examples": {
                            "ID do Cartão": {
                                "value": "\"02ec41795637446d805b6795b3b3331e\""
                            }
                        },
                        "name": "card_id",
                        "description": "Identificador do cartão.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deleted_data"
                                },
                                "examples": {
                                    "Cartão Deletado": {
                                        "value": {
                                            "id": "02ec41795637446d805b6795b3b3331e",
                                            "resource": "card",
                                            "deleted": true
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Cartão deletado com sucesso."
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404_not_found"
                    }
                },
                "security": [
                    {
                        "Token": [
                        ]
                    }
                ],
                "operationId": "delete_card",
                "summary": "Remover um cartão previamente cadastrado",
                "description": "Remove permanentemente as informações de um cartão previamente cadastrado."
            }
        },
        "/v1/buyers/{buyerId}/cards/{cardId}": {
            "post": {
                "tags": [
                    "Compradores"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/individual_object_data"
                                }
                            }
                        },
                        "description": "Retorna os dados alterados do comprador."
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/404_not_found"
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    }
                },
                "operationId": "update_buyer_card",
                "summary": "Alterar cartão padrão do comprador",
                "description": "Altera o cartão padrão da carteira de um comprador."
            },
            "parameters": [
                {
                    "examples": {
                        "Comprador de Exemplo": {
                            "value": "005846dadde34e28ba7b9fecfccc989a"
                        }
                    },
                    "name": "buyerId",
                    "description": "Identificador do comprador.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "examples": {
                        "Cartão de Exemplo": {
                            "value": "658016dadde3563rda7b9fecfccas45g"
                        }
                    },
                    "name": "cardId",
                    "description": "Identificador do cartão.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/v1/transactions": {

        },
        "/v1/transactions/cards": {

        },
        "/v1/transactions/{transactionId}": {

        },
        "/v1/transactions/{transactionId}/capture": {

        },
        "/v1/transactions/{transactionId}/void": {

        },
        "/v1/transactions/cards/buyer/{buyerId}": {

        },
        "/v1/transactions/cards/token/{tokenId}": {

        },
        "/v1/buyers/{buyerId}": {
            "get": {
                "tags": [
                    "Compradores"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/individual_object_data"
                                }
                            }
                        },
                        "description": "Retorna os detalhes do comprador."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "404": {
                        "$ref": "#/components/responses/404_not_found"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    }
                },
                "operationId": "get_buyer",
                "summary": "Recuperar detalhes de comprador",
                "description": "Recupera detalhes de um comprador."
            },
            "put": {
                "requestBody": {
                    "description": "Informações atualizadas.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/individual_object_data"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Compradores"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/individual_object_data"
                                }
                            }
                        },
                        "description": "Retorna os dados atualizados do comprador."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "404": {
                        "$ref": "#/components/responses/404_not_found"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    }
                },
                "operationId": "update_buyer",
                "summary": "Atualizar informações de comprador",
                "description": "Atualiza as informações de um comprador."
            },
            "delete": {
                "tags": [
                    "Compradores"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deleted_data"
                                },
                                "examples": {
                                    "Comprador deletado": {
                                        "value": {
                                            "id": "2278881b81f54a9787c2acb08732c607",
                                            "resource": "buyer",
                                            "deleted": true
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Retorna as confirmações de que o comprador foi deletado."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "404": {
                        "$ref": "#/components/responses/404_not_found"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    }
                },
                "operationId": "remove_buyer",
                "summary": "Remover comprador",
                "description": "Remove o comprador determinado."
            },
            "parameters": [
                {
                    "examples": {
                        "Comprador de Exemplo": {
                            "value": "005846dadde34e28ba7b9fecfccc989a"
                        }
                    },
                    "name": "buyerId",
                    "description": "Identificador do comprador.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/v1/buyers/individual": {
            "description": "",
            "post": {
                "requestBody": {
                    "description": "Dados do comprador.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/individual_object_data"
                            },
                            "examples": {
                                "Comprador de Exemplo": {
                                    "value": {
                                        "first_name": "Cliente Fulano",
                                        "taxpayer_id": "11836128770",
                                        "email": "cliente.fulano@mail.com",
                                        "address": {
                                            "line1": "Avenida Legal",
                                            "line2": "244",
                                            "line3": "AP 1",
                                            "neighborhood": "Barra da Tijuca",
                                            "city": "Rio de Janeiro",
                                            "state": "RJ",
                                            "postal_code": "22845046",
                                            "country_code": "BR"
                                        },
                                        "metadata": {

                                        },
                                        "created_at": "2018-10-18T17:49:54+00:00",
                                        "updated_at": "2018-10-18T17:49:54+00:00"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Compradores"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/individual_object_data"
                                },
                                "examples": {
                                    "Dados do Comprador": {
                                        "value": {
                                            "id": "ab4f24fea4d641d89776f42e2800f9f8",
                                            "status": "active",
                                            "resource": "buyer",
                                            "account_balance": "0.00",
                                            "current_balance": "0.00",
                                            "first_name": "Cliente Fulano",
                                            "taxpayer_id": "11836128770",
                                            "email": "cliente.fulano@mail.com",
                                            "address": {
                                                "line1": "Avenida Legal",
                                                "line2": "244",
                                                "line3": "AP 1",
                                                "neighborhood": "Barra da Tijuca",
                                                "city": "Rio de Janeiro",
                                                "state": "RJ",
                                                "postal_code": "22845046",
                                                "country_code": "BR"
                                            },
                                            "metadata": {

                                            },
                                            "created_at": "2018-10-18T17:49:54+00:00",
                                            "updated_at": "2018-10-18T17:49:54+00:00"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Retorna os dados do comprador criado."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorized"
                    }
                },
                "operationId": "create_buyer",
                "summary": "Criar comprador (Pessoa Física)",
                "description": "Cria um novo comprador na plataforma."
            }
        }
    },
    "components": {
        "schemas": {
            "card_data": {
                "title": "Root Type for card_data",
                "description": "Dados do Cartão",
                "required": [
                    "card_number",
                    "expiration_month",
                    "expiration_year",
                    "holder_name",
                    "security_code"
                ],
                "type": "object",
                "properties": {
                    "holder_name": {
                        "description": "Nome do portador, conforme impresso no cartão.",
                        "type": "string"
                    },
                    "card_number": {
                        "description": "Sequência de números que identificam o cartão.",
                        "type": "string"
                    },
                    "security_code": {
                        "description": "Código de segurança (também conhecido como cvv) do cartão.",
                        "type": "string"
                    },
                    "expiration_month": {
                        "description": "Mês de expiração do cartão.",
                        "type": "string"
                    },
                    "expiration_year": {
                        "description": "Ano de expiração do cartão, com 4 dígitos.",
                        "type": "string"
                    }
                },
                "example": {
                    "holder_name": "Test Tester",
                    "card_number": "4539003370725497",
                    "security_code": "123",
                    "expiration_month": "10",
                    "expiration_year": "2025"
                }
            },
            "login_data": {
                "title": "Root Type for login_data",
                "description": "Dados de Login",
                "required": [
                    "email",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "description": "E-mail do usuário na plataforma Unbanked.",
                        "type": "string"
                    },
                    "password": {
                        "description": "Senha do usuário na plataforma Unbanked.",
                        "type": "string"
                    }
                },
                "example": {
                    "email": "you@mail.com",
                    "password": "123456"
                }
            },
            "token_data": {
                "title": "Root Type for token_data",
                "description": "Dados do Token",
                "required": [
                    "authTime",
                    "expirationTime",
                    "issuedAtTime",
                    "token"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "description": "Token JWT utilizado para autenticar requisições.",
                        "type": "string"
                    },
                    "expirationTime": {
                        "description": "Data de expiração do token.",
                        "type": "string"
                    },
                    "authTime": {
                        "description": "Data de login do usuário.",
                        "type": "string"
                    },
                    "issuedAtTime": {
                        "description": "Data de emissão do token.",
                        "type": "string"
                    }
                },
                "example": {
                    "token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjI1OTc0MmQyNjlhY2IzNWZiNjU3YzBjNGRkMmM3YjcyYWEzMTRiNTAiLCJ0eXAiOiJKV1QifQ.eyJuYW1lIjoiZG1jr2xjY2FtIiwicGljdHVyZSI6Imh0dHBzOi8vYXBpLmFkb3JhYmxlLmlvL2F2YXRhcnMvNTAwLzMyODM2ODI0ODgzLnBuZyIsInpvb3BJRCI6IjkzMThhMDkxZWY3ZTQ4NWRiZjdhNjRkOGRiNDg4NzhlIiwidHlwZSI6ImluZGl2aWR1YWwiLCJyZXNvdXJjZSI6ImJ1eWVyIiwiaXNzIjoiaHR0cHM6Ly9zZWN1cmV0b2tlbi5nb29nbGUuY29tL3VuYmFua2VkLWJldGEiLCJhdWQiOiJ1bmJhbmtlZC1iZXRhIiwiYXV0aF90aW1lIjoxNTgwMjE3OTkzLCJ1c2VyX2lkIjoiS3hkaW1SM2R5T05aVzZFODR3T1pOWGtTczBJMiIsInN1YiI6Ikt4ZGltUjNkeU9OWlc2RTg0d09aTlhrZHMwSTIiLCJpYXQiOjE1ODAyMTc5OTMsImV4cCI6MTU4MDIyMTU5MywiZW1haWwiOiJkYW5pbG8ubW9yZWlyYTk0QGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJmaXJlYmFzZSI6eyJpZGVudGl0aWVzIjp7ImVtYWlsIjpbImRhbmlsby5tb3JlaXJhOTRAZ21haWwuY29tIl19LCJzaWduX2luX3Byb3ZpZGVyIjoicGFzc3dvcmQifX0.D9bGNI2WZePxcX0ZGAMLjW8DkNkGaade_599uU1TWF4utt4h5pbDBBegBnH6N2VCROz7oxK9tl7uq7XLUGEYohmpntDdJ4X2uQyCwRfKkAOus-MDFDZnAtAr_s7XW7sTUYtpT9Wc3XuW2at9Ac_zhqDRwkfMMcVEVoflavKETYxHy2PrZ0tc4iUf8SsENEsqQCL3Ioa2al1j3CaX3MLhIXaWGrh7naUYyDD__h6flaie9ngi1ICD47z8ySSNUg_2Uce9qyxnNs5jv62kl0CAN_Xag8RbxRYr0kKOdOpaJYw-LouAb_hESMFSmHejhrdlolIbCpdh_f7uSGQ91LbSRA",
                    "expirationTime": "Tue, 28 Jan 2020 14:26:33 GMT",
                    "authTime": "Tue, 28 Jan 2020 13:26:33 GMT",
                    "issuedAtTime": "Tue, 28 Jan 2020 13:26:33 GMT"
                }
            },
            "api_data": {
                "title": "Root Type for api_data",
                "description": "Dados da API",
                "required": [
                    "env",
                    "name",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Nome da API.",
                        "type": "string"
                    },
                    "env": {
                        "description": "Ambiente de execução da API.",
                        "type": "string"
                    },
                    "version": {
                        "description": "Versão da API.",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "unbanked-api",
                    "env": "sandbox",
                    "version": "1"
                }
            },
            "error_data": {
                "title": "Root Type for error_data",
                "description": "Dados de um erro.",
                "required": [
                    "category",
                    "message",
                    "status",
                    "status_code",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "description": "Código de status de erro.",
                        "type": "string"
                    },
                    "status_code": {
                        "format": "int32",
                        "description": "Status de erro.",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Tipo de erro.",
                        "type": "string"
                    },
                    "category": {
                        "description": "Categoria de erro.",
                        "type": "string"
                    },
                    "message": {
                        "description": "Mensagem de erro.",
                        "type": "string"
                    }
                },
                "example": {
                    "status": "Bad Request",
                    "status_code": 400,
                    "type": "invalid_request_error",
                    "category": "missing_required_param",
                    "message": "Missing required param: expiration_year. Please verify request parameters."
                }
            },
            "card_token_data": {
                "title": "Root Type for card_token_data",
                "description": "Dados de um token de cartão.",
                "required": [
                    "card",
                    "created_at",
                    "id",
                    "used",
                    "updated_at",
                    "type",
                    "resource"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Identificador único para este objeto.",
                        "type": "string"
                    },
                    "resource": {
                        "description": "Tipo do recurso.",
                        "type": "string"
                    },
                    "used": {
                        "description": "Indica se o token foi ou não utilizado. tokens podem ser utilizados apenas 1 vez.",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "O tipo do token.",
                        "enum": [
                            "bankaccount",
                            "card"
                        ],
                        "type": "string"
                    },
                    "card": {
                        "$ref": "#/components/schemas/card_status_data",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "resource": {
                                "type": "string"
                            },
                            "card_brand": {
                                "type": "string"
                            },
                            "first4_digits": {
                                "type": "string"
                            },
                            "expiration_month": {
                                "type": "string"
                            },
                            "expiration_year": {
                                "type": "string"
                            },
                            "holder_name": {
                                "type": "string"
                            },
                            "is_active": {
                                "type": "boolean"
                            },
                            "is_valid": {
                                "type": "boolean"
                            },
                            "is_verified": {
                                "type": "boolean"
                            },
                            "fingerprint": {
                                "type": "string"
                            },
                            "verification_checklist": {
                                "type": "object",
                                "properties": {
                                    "postal_code_check": {
                                        "type": "string"
                                    },
                                    "security_code_check": {
                                        "type": "string"
                                    },
                                    "address_line1_check": {
                                        "type": "string"
                                    }
                                }
                            },
                            "metadata": {
                                "type": "object"
                            },
                            "created_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "updated_at": {
                                "format": "date-time",
                                "type": "string"
                            }
                        }
                    },
                    "created_at": {
                        "format": "date-time",
                        "description": "W3C Datetime Format para a data de criação (yyyy-mm-ddThh:mm:ssZ).",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "description": "W3C Datetime Format para a data da última atualização (yyyy-mm-ddThh:mm:ssZ).",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "420f9fa974bd4210a77783e94447d218",
                    "resource": "token",
                    "used": false,
                    "type": "card",
                    "card": {
                        "id": "8f76c317f27b4cbd8247cc42d70618cd",
                        "resource": "card",
                        "card_brand": "Visa",
                        "first4_digits": "4929",
                        "expiration_month": "9",
                        "expiration_year": "2020",
                        "holder_name": "ZOOP SQUAD QA",
                        "is_active": false,
                        "is_valid": true,
                        "is_verified": false,
                        "fingerprint": "5c63dfe5921ccbc6195e8355aa965c1e6c552f74b96669dafec9addc2bfe1ea9",
                        "verification_checklist": {
                            "postal_code_check": "unchecked",
                            "security_code_check": "unchecked",
                            "address_line1_check": "unchecked"
                        },
                        "metadata": {

                        },
                        "created_at": "2019-05-06T11:33:45+00:00",
                        "updated_at": "2019-05-06T11:33:45+00:00"
                    },
                    "created_at": "2019-05-06T11:33:45+00:00",
                    "updated_at": "2019-05-06T11:33:45+00:00"
                }
            },
            "card_status_data": {
                "title": "Root Type for card_status_data",
                "description": "Dados de status de cartão.",
                "required": [
                    "card_brand",
                    "created_at",
                    "expiration_month",
                    "expiration_year",
                    "fingerprint",
                    "first4_digits",
                    "holder_name",
                    "id",
                    "is_active",
                    "is_valid",
                    "is_verified",
                    "metadata",
                    "resource",
                    "updated_at",
                    "verification_checklist"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Identificador exclusivo para este cartão.",
                        "type": "string"
                    },
                    "resource": {
                        "description": "Tipo do recurso.",
                        "type": "string"
                    },
                    "card_brand": {
                        "description": "Bandeira do cartão.",
                        "type": "string"
                    },
                    "first4_digits": {
                        "description": "Os primeiros quatro dígitos do cartão.",
                        "type": "string"
                    },
                    "expiration_month": {
                        "description": "Mês de expiração do cartão.",
                        "type": "string"
                    },
                    "expiration_year": {
                        "description": "Ano de expiração do cartão.",
                        "type": "string"
                    },
                    "holder_name": {
                        "description": "Nome do portador, conforme impresso no cartão.",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Indica se o cartão está ativo (_true_) ou foi desativado (_false_).",
                        "type": "boolean"
                    },
                    "is_valid": {
                        "description": "Indica se o cartão é valido (_true_) ou foi desativado (_false_).",
                        "type": "boolean"
                    },
                    "is_verified": {
                        "description": "Se um recurso de cartão foi ou não verificado.",
                        "type": "boolean"
                    },
                    "fingerprint": {
                        "description": "Todo cartão tem um atributo de impressão digital que pode ser usado para identificar de forma exclusiva um número de cartão particular.",
                        "type": "string"
                    },
                    "verification_checklist": {
                        "$ref": "#/components/schemas/verification_checklist_data",
                        "properties": {
                            "postal_code_check": {
                                "type": "string"
                            },
                            "security_code_check": {
                                "type": "string"
                            },
                            "address_line1_check": {
                                "type": "string"
                            }
                        }
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/metadata_data",
                        "description": ""
                    },
                    "created_at": {
                        "format": "date-time",
                        "description": "W3C Datetime Format para a data de criação (yyyy-mm-ddThh:mm:ssZ).",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "description": "W3C Datetime Format para a data da última atualização (yyyy-mm-ddThh:mm:ssZ).",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "8f76c317f27b4cbd8247cc42d70618cd",
                    "resource": "card",
                    "card_brand": "Visa",
                    "first4_digits": "4929",
                    "expiration_month": "9",
                    "expiration_year": "2020",
                    "holder_name": "TEST MC TESTER",
                    "is_active": false,
                    "is_valid": true,
                    "is_verified": false,
                    "fingerprint": "5c63dfe5921ccbc6195e8355aa965c1e6c552f74b96669dafec9addc2bfe1ea9",
                    "verification_checklist": {
                        "postal_code_check": "unchecked",
                        "security_code_check": "unchecked",
                        "address_line1_check": "unchecked"
                    },
                    "metadata": {

                    },
                    "created_at": "2019-05-06T11:33:45+00:00",
                    "updated_at": "2019-05-06T11:33:45+00:00"
                }
            },
            "metadata_data": {
                "title": "Root Type for metadata_data",
                "description": "Mapeamento de chaves de string para valores de sequência de caracteres.",
                "type": "object",
                "properties": {
                    "key": {
                        "description": "Identificador para os metadados (máximo de 30 caracteres).",
                        "type": "string"
                    },
                    "value": {
                        "description": "Informação a ser armazenada como metadados.",
                        "type": "string"
                    }
                },
                "example": {
                    "key": "foo",
                    "value": "bar"
                }
            },
            "verification_checklist_data": {
                "title": "Root Type for verification_checklist_data",
                "description": "Dados do checklist de verificação.",
                "required": [
                    "address_line1_check",
                    "postal_code_check",
                    "security_code_check"
                ],
                "type": "object",
                "properties": {
                    "postal_code_check": {
                        "description": "Checagem do código postal.",
                        "type": "string"
                    },
                    "security_code_check": {
                        "description": "Checagem do código de segurança.",
                        "type": "string"
                    },
                    "address_line1_check": {
                        "description": "Checagem da primeira linha do endereço.",
                        "type": "string"
                    }
                },
                "example": {
                    "postal_code_check": "unchecked",
                    "security_code_check": "unchecked",
                    "address_line1_check": "unchecked"
                }
            },
            "error_object_data": {
                "description": "Dados de uma requisição inválida.",
                "required": [
                    "error"
                ],
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/error_data",
                        "description": "Objeto contendo os detalhes do erro.",
                        "properties": {
                            "status": {
                                "type": "string"
                            },
                            "status_code": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "type": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "error": {
                        "status": "Bad Request",
                        "status_code": 400,
                        "type": "invalid_request_error",
                        "category": "missing_required_param",
                        "message": "Missing required param: expiration_year. Please verify request parameters."
                    }
                }
            },
            "auth_error_object_data": {
                "title": "Root Type for auth_error_data",
                "description": "Dados padrões do erro de autenticação.",
                "required": [
                    "error"
                ],
                "type": "object",
                "properties": {
                    "error": {
                        "$ref": "#/components/schemas/auth_error_data",
                        "properties": {
                            "code": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "error": {
                        "code": "auth/user-not-found",
                        "message": "There is no user record corresponding to this identifier. The user may have been deleted."
                    }
                }
            },
            "auth_error_data": {
                "title": "Root Type for auth_error_data",
                "description": "Dados do erro de autenticação.",
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "description": "Código do erro.",
                        "type": "string"
                    },
                    "message": {
                        "description": "Mensagem do erro.",
                        "type": "string"
                    }
                },
                "example": {
                    "code": "auth/user-not-found",
                    "message": "There is no user record corresponding to this identifier. The user may have been deleted."
                }
            },
            "reset_login_data": {
                "title": "Root Type for login_data",
                "description": "Dados de Reset do Login.",
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "description": "E-mail do usuário na plataforma Unbanked.",
                        "type": "string"
                    }
                },
                "example": {
                    "email": "you@mail.com"
                }
            },
            "message_data": {
                "title": "Root Type for message_data",
                "description": "Dados da mensagem.",
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "message": {
                        "description": "Mensagem da resposta.",
                        "type": "string"
                    }
                },
                "example": {
                    "message": "Link to Reset Password Sent"
                }
            },
            "link_card_to_buyer_data": {
                "title": "Root Type for link_card_to_buyer_data",
                "description": "Dados do cartão e do comprador.",
                "required": [
                    "buyer",
                    "token"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "description": "ID do Token.",
                        "type": "string"
                    },
                    "buyer": {
                        "description": "ID do comprador.",
                        "type": "string"
                    }
                },
                "example": {
                    "token": "3012a31a10153e28ba71524131252018",
                    "buyer": "1187r3rgthe85628va1b9fecfccc109a"
                }
            },
            "address_data": {
                "title": "Root Type for address_data",
                "description": "Dados de endereço.",
                "required": [
                    "city",
                    "country_code",
                    "line1",
                    "line2",
                    "neighborhood",
                    "postal_code",
                    "state"
                ],
                "type": "object",
                "properties": {
                    "line1": {
                        "description": "Logradouro.",
                        "type": "string"
                    },
                    "line2": {
                        "description": "Nº",
                        "type": "string"
                    },
                    "line3": {
                        "description": "Complemento.",
                        "type": "string"
                    },
                    "neighborhood": {
                        "description": "Bairro.",
                        "type": "string"
                    },
                    "city": {
                        "description": "Cidade;",
                        "type": "string"
                    },
                    "state": {
                        "description": "Estado (UF).",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "CEP.",
                        "type": "string"
                    },
                    "country_code": {
                        "description": "Código do País",
                        "type": "string"
                    }
                },
                "example": {
                    "line1": "Avenida Legal",
                    "line2": "123",
                    "line3": "AP 3",
                    "neighborhood": "Barra da Lapa",
                    "city": "Rio de Janeiro",
                    "state": "RJ",
                    "postal_code": "22845056",
                    "country_code": "BR"
                }
            },
            "individual_object_data": {
                "title": "Root Type for buyer_object_data",
                "description": "Dados do recurso \"Indivíduo\".",
                "required": [
                    "address",
                    "email",
                    "first_name",
                    "last_name",
                    "phone_number",
                    "taxpayer_id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Identificador.",
                        "type": "string"
                    },
                    "status": {
                        "description": "Situação.",
                        "type": "string"
                    },
                    "resource": {
                        "description": "Tipo do recurso.",
                        "type": "string"
                    },
                    "account_balance": {
                        "description": "Saldo da conta.",
                        "type": "string"
                    },
                    "current_balance": {
                        "description": "Saldo atual.",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "Nome.",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Sobrenome.",
                        "type": "string"
                    },
                    "taxpayer_id": {
                        "description": "CPF.",
                        "type": "string"
                    },
                    "email": {
                        "description": "E-mail.",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "Número do telefone.",
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/address_data",
                        "properties": {
                            "line1": {
                                "type": "string"
                            },
                            "line2": {
                                "type": "string"
                            },
                            "line3": {
                                "type": "string"
                            },
                            "neighborhood": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "postal_code": {
                                "type": "string"
                            },
                            "country_code": {
                                "type": "string"
                            }
                        }
                    },
                    "payment_methods": {
                        "description": "Métodos de pagamento.",
                        "type": "string"
                    },
                    "default_debit": {
                        "description": "Cartão padrão da carteira.",
                        "type": "string"
                    },
                    "default_credit": {
                        "description": "Conta bancária padrão.",
                        "type": "string"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/metadata_data"
                    },
                    "created_at": {
                        "format": "date-time",
                        "description": "W3C Datetime Format para a data de criação (yyyy-mm-ddThh:mm:ssZ).",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "description": "W3C Datetime Format para a data da última atualização (yyyy-mm-ddThh:mm:ssZ).",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "ab4f24fea4d641d89776f42e2800f9f8",
                    "status": "active",
                    "resource": "buyer",
                    "account_balance": "0.00",
                    "current_balance": "0.00",
                    "first_name": "Cliente Fulano",
                    "taxpayer_id": "11836128770",
                    "email": "cliente.fulano@mail.com",
                    "address": {
                        "line1": "Avenida Legal",
                        "line2": "244",
                        "line3": "AP 1",
                        "neighborhood": "Barra da Tijuca",
                        "city": "Rio de Janeiro",
                        "state": "RJ",
                        "postal_code": "22845046",
                        "country_code": "BR"
                    },
                    "default_debit": "a89bd5a20e334da1aa49b9e85033b1cb",
                    "default_credit": "a89bd5a20e334da1aa49b9e85033b1cb",
                    "metadata": {

                    },
                    "created_at": "2018-10-18T17:49:54+00:00",
                    "updated_at": "2018-10-18T17:49:54+00:00"
                }
            },
            "transaction_data": {
                "title": "Root Type for transaction_data",
                "description": "Dados de uma transação.",
                "type": "object",
                "properties": {
                    "amount": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "reference_id": {
                        "type": "string"
                    },
                    "on_behalf_of": {
                        "type": "string"
                    },
                    "customer": {
                        "type": "string"
                    },
                    "payment_type": {
                        "type": "string"
                    },
                    "payment_method": {
                        "type": "object",
                        "properties": {
                            "expiration_date": {
                                "format": "date",
                                "type": "string"
                            },
                            "payment_limit_date": {
                                "format": "date",
                                "type": "string"
                            },
                            "body_instructions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "billing_instructions": {
                                "type": "object",
                                "properties": {
                                    "late_fee": {
                                        "type": "object",
                                        "properties": {
                                            "mode": {
                                                "type": "string"
                                            },
                                            "amount": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "interest": {
                                        "type": "object",
                                        "properties": {
                                            "mode": {
                                                "type": "string"
                                            },
                                            "amount": {
                                                "format": "int32",
                                                "type": "integer"
                                            }
                                        }
                                    },
                                    "discount": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "mode": {
                                                    "type": "string"
                                                },
                                                "limit_date": {
                                                    "format": "date",
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "format": "int32",
                                                    "type": "integer"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "source": {
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": "string"
                            },
                            "currency": {
                                "type": "string"
                            },
                            "usage": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "card": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "string"
                                    }
                                }
                            },
                            "installment_plan": {
                                "type": "object",
                                "properties": {
                                    "mode": {
                                        "type": "string"
                                    },
                                    "number_installments": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "example": {
                    "amount": 300,
                    "currency": "BRL",
                    "description": "Venda de ingressos para o show do dia 30",
                    "reference_id": "reference_5132",
                    "on_behalf_of": "573e2aa71cb94ecda8dee14087327b48",
                    "customer": "573e2aa71cb94ecda8dee14087327b48",
                    "payment_type": "boleto",
                    "payment_method": {
                        "expiration_date": "2018-11-20",
                        "payment_limit_date": "2018-11-20",
                        "body_instructions": [
                            "Pedido #5132"
                        ],
                        "billing_instructions": {
                            "late_fee": {
                                "mode": "FIXED",
                                "amount": 500
                            },
                            "interest": {
                                "mode": "DAILY_AMOUNT",
                                "amount": 200
                            },
                            "discount": [
                                {
                                    "mode": "FIXED",
                                    "limit_date": "2018-11-09",
                                    "amount": 150
                                },
                                {
                                    "mode": "FIXED",
                                    "limit_date": "2018-11-10",
                                    "amount": 100
                                }
                            ]
                        }
                    },
                    "source": {
                        "amount": "1",
                        "currency": "BRL",
                        "usage": "single_use",
                        "type": "card",
                        "card": {
                            "id": "ed7dc65401154ae19f0715c0112453cf"
                        },
                        "installment_plan": {
                            "mode": "with_interest",
                            "number_installments": "1"
                        }
                    }
                }
            },
            "card_transaction_data": {
                "description": "Dados de transação com cartão.",
                "type": "object"
            },
            "deleted_data": {
                "title": "Root Type for deleted_card_data",
                "description": "Informações do cartão deletado.",
                "required": [
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Identificador do recurso deletado.",
                        "type": "string"
                    },
                    "resource": {
                        "description": "Tipo do recurso deletado.",
                        "type": "string"
                    },
                    "deleted": {
                        "description": "Indica se o recurso foi deletado.",
                        "type": "boolean"
                    }
                },
                "example": {
                    "id": "02ec41795637446d805b6795b3b3331e",
                    "resource": "card",
                    "deleted": true
                }
            }
        },
        "responses": {
            "401_unauthorized": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error_object_data"
                        },
                        "examples": {
                            "Sem Autorização": {
                                "value": {
                                    "error": {
                                        "status": "Unauthorized",
                                        "status_code": 401,
                                        "type": "invalid_request_error",
                                        "category": "authentication_required",
                                        "message": "Gateway: No API key provided."
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Sem dados de autenticação."
            },
            "400_bad_request": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error_object_data"
                        },
                        "examples": {
                            "Requisição Inválida": {
                                "value": {
                                    "error": {
                                        "status": "Bad Request",
                                        "status_code": 400,
                                        "type": "invalid_request_error",
                                        "category": "missing_required_param",
                                        "message": "Missing required param: X. Please verify request parameters."
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Requisição inválida."
            },
            "404_not_found": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error_object_data"
                        },
                        "examples": {
                            "Recurso não Encontrado": {
                                "value": {
                                    "error": {
                                        "status": "Not Found",
                                        "status_code": 404,
                                        "type": "invalid_request_error",
                                        "category": "resource_not_found",
                                        "message": "Sorry, the resource you are trying to use does not exist or has been deleted."
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Recurso não encontrado."
            },
            "201_card_token_created": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/card_token_data"
                        },
                        "examples": {
                            "card_token_example": {
                                "value": {
                                    "id": "420f9fa974bd4210a77783e94447d218",
                                    "resource": "token",
                                    "used": false,
                                    "type": "card",
                                    "card": {
                                        "id": "8f76c317f27b4cbd8247cc42d70618cd",
                                        "resource": "card",
                                        "card_brand": "Visa",
                                        "first4_digits": "4929",
                                        "expiration_month": "9",
                                        "expiration_year": "2020",
                                        "holder_name": "ZOOP SQUAD QA",
                                        "is_active": false,
                                        "is_valid": true,
                                        "is_verified": false,
                                        "fingerprint": "5c63dfe5921ccbc6195e8355aa965c1e6c552f74b96669dafec9addc2bfe1ea9",
                                        "verification_checklist": {
                                            "postal_code_check": "unchecked",
                                            "security_code_check": "unchecked",
                                            "address_line1_check": "unchecked"
                                        },
                                        "metadata": {

                                        },
                                        "created_at": "2019-05-06T11:33:45+00:00",
                                        "updated_at": "2019-05-06T11:33:45+00:00"
                                    },
                                    "created_at": "2019-05-06T11:33:45+00:00",
                                    "updated_at": "2019-05-06T11:33:45+00:00"
                                }
                            }
                        }
                    }
                },
                "description": "Retorna o token criado."
            },
            "400_bad_request_auth": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/auth_error_object_data"
                        },
                        "examples": {
                            "Usuário não encontrado": {
                                "value": {
                                    "error": {
                                        "code": "auth/user-not-found",
                                        "message": "There is no user record corresponding to this identifier. The user may have been deleted."
                                    }
                                }
                            },
                            "Senha inválida": {
                                "value": {
                                    "error": {
                                        "code": "auth/wrong-password",
                                        "message": "The password is invalid or the user does not have a password."
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Requisição inválida."
            },
            "400_bad_request_auth_reset": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/auth_error_object_data"
                        },
                        "examples": {
                            "Usuário não encontrado": {
                                "value": {
                                    "error": {
                                        "code": "auth/user-not-found",
                                        "message": "There is no user record corresponding to this identifier. The user may have been deleted."
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Requisição inválida."
            }
        },
        "securitySchemes": {
            "Token": {
                "type": "apiKey",
                "description": "Obtido através de autenticação do usuário utilizando-se de `email` e `senha`.",
                "name": "x-unbanked-token",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Token": [
            ]
        }
    ],
    "tags": [
        {
            "name": "Informações",
            "description": "Essa sessão retorna informações sobre a API e também executa um \"health check\" dos serviços e servidores da Unbanked."
        },
        {
            "name": "Autenticação",
            "description": "Essa sessão permite autenticar o parceiro na API bem como gerir credenciais.\n\nPara se registrar como parceiro Unbanked e receber seus dados de acesso a nossa API envie um e-mail para dev@unbanked.com.br."
        },
        {
            "name": "API de Meios de Pagamento",
            "description": "A presente API (Meios de Pagamento), visa empoderar o usuário com soluções on-line e off-line para gestão de contas digitais, emissão de cobranças (por boleto e cartão) e conciliação de pagamentos.\n\nAtravés de nossas soluções você poderá implementar soluções de pagamento para o seu Marketplace (configurando regras de split personalizadas), criar novos produtos para sua fintech (possibilitado a gestão de contas digitais integradas à CIP), ou ainda turbinar o seu ERP com funcionalidades financeiras.\n\nAqui não limitamos a sua criatividade!\n\n---\n\n[Termos de Uso da API de Meios de Pagamento](https://docs.unbanked.com.br/termos-de-uso-api-meios-de-pagamento.pdf)"
        },
        {
            "name": "Cartões",
            "description": "Essa sessão permite o gerenciamento de cartões e clientes dentro da plataforma da **un_banked**. A criação de transações de  e-commerce com cartões de crédito pode ser realizada através de 4 fluxos distintos. Cada fluxo é indicado para um modelo diferente de negócio. Veja abaixo cada um deles e escolha o modo no qual você se encaixa melhor.\n\n- **tokens descartáveis**: Indicado para os quem não possue as certificações de segurança necessárias para ter os dados de cartões de crédito/débito trafegando em seus servidores, a passagem dos dados do cartão para a API é realizada diretamente do navegador e/ou do aplicativo rodando na dispositivo móvel do comprador. Os tokens descartáveis só podem ser utilizados para uma única transação. Uma vez utilizado, descarta-se o token e nenhuma outra operação poderá ser realizada com o mesmo identificador.\n- **cartão padrão da carteira digital do comprador**: Indicado para os que desejam permitir que os seus compradores armazenem um único cartão para compras futuras, modelo muito conhecido no e-commerce como One-Click Buy.\n- **outros cartões da carteira digital do comprador**: Indicado para os que desejam permitir que os seus compradores armazenem não apenas um, mas vários cartões para compras futuras, permitindo a escolha de qual cartão ele prefere ser cobrado na hora da venda.\n- **cartão não tokenizado**: Indicado para os que possuem certificação PCI-DSS e desejam trabalhar num modelo de integração sem tokenização de cartões e nem associação com compradores.\n\n**Nunca, em nenhuma hipótese, armazene o código verificador e nem o número descriptografado do cartão do seu cliente. Além de proibido pelas normas internacionais de segurança da indústria de pagamentos com cartões, isso também gera uma brecha de segurança e, em caso de vazamento de informações, processos jurídicos e multas financeiras.**"
        },
        {
            "name": "Compradores",
            "description": "Dentre os recursos principais da nossa API está o comprador (recurso que poderá ser debitados).\n\nO objeto/recurso comprador (buyer) é usado para administrar os compradores, bem como para permitir reembolsos, assinaturas, inserir detalhes do cartão de crédito para um comprador, editar detalhes e, claro, fazer transações."
        },
        {
            "name": "Transações",
            "description": "As transações são utilizadas para gerir valores pela plataforma. Uma transação pode envolver: boleto, cartão, conta digital e conta bancária."
        }
    ],
    "x-tagGroups": [
        {
            "name": "Introdução",
            "tags": [
                "Informações"
            ]
        },
        {
            "name": "Autenticação",
            "tags": [
                "Autenticação"
            ]
        },
        {
            "name": "Meios de Pagamento",
            "tags": [
                "API de Meios de Pagamento",
                "Transações",
                "Cartões",
                "Compradores"
            ]
        }
    ]
}